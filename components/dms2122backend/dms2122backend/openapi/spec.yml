openapi: 3.0.0
info:
  title: DMS backend service REST API
  version: '1.0'
  description: |
    REST API for the backend service.
    This is part of the mandatory exercise.
    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Questions-related operations (e.g., list, create, search)
  - name: answers
    description: Answer-related operations (e.g., grant, revoke)
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  '/':
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server
  /questions:
    get:
      summary: Gets a listing of questions.
      operationId: dms2122backend.presentation.rest.question.list_questions
      responses:
        '200':
          description: A list of questions.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionsFullListModel'
      tags:
        - questions
      security:
        - api_key: []
  /question/new:
    post:
      summary: Creates a new question.
      operationId: dms2122backend.presentation.rest.question.create_question
      requestBody:
        description: New question's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullIdModel'
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the question's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
      security:
        - api_key: []
  /question/{id}:
    put:
      summary: Edit a question given an ID.
      operationId: dms2122backend.presentation.rest.question.edit_question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Question's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullIdModel'
      responses:
        '200':
          description: Data of the requested question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the question's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
    get:
      summary: Obtains a question given an ID.
      operationId: dms2122backend.presentation.rest.question.get_question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data of the question requested.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /question/{id}/answer/{username}:
    post:
      summary: Answer created by answering a question.
      operationId: dms2122backend.presentation.rest.answer.create_question_answer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Answer's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AnswerFullModel'
      responses:
        '200':
          description: Answer created.
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
  /answers/{id}:
    get:
      summary: Gets all answers to a question.
      operationId: dms2122backend.presentation.rest.answer.get_question_answers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The list of answers for that question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '400':
          description: A mandatory parameter was not given.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
  /answers/{username}:
    get:
      summary: Gets all the answers to a question.
      operationId: dms2122backend.presentation.rest.answer.get_student_answers
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of answers for that user.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '400':
          description: A mandatory parameter was not given.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []


components:
  schemas:
    QuestionFullModel:
      type: object
      properties:
        questionName:
          type: string
        description:
          type: string
        questionAnswer:
          type: string
        questionAnswer2:
          type: string
        questionAnswer3:
          type: string
        correctAnswer:
          type: integer
        puntuation:
          type: number
        penalty:
          type: number
      required:
        - questionName
        - description
        - questionAnswer
        - questionAnswer2
        - questionAnswer3
        - correctAnswer
        - puntuation
        - penalty
    QuestionFullIdModel:
      type: object
      properties:
        id:
          type: integer
        questionName:
          type: string
        description:
          type: string
        questionAnswer:
          type: string
        questionAnswer2:
          type: string
        questionAnswer3:
          type: string
        correctAnswer:
          type: integer
        puntuation:
          type: number
        penalty:
          type: number
      required:
        - id
        - questionName
        - description
        - questionAnswer
        - questionAnswer2
        - questionAnswer3
        - correctAnswer
        - puntuation
        - penalty
    QuestionsFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/QuestionFullIdModel'

    AnswerFullModel:
      type: object
      properties:
        id:
          type: integer
        answer:
          type: string
        valoration:
          type: number
        username:
          type: string
      required:
        - id
        - answer
        - valoration
        - username
    AnswersFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/AnswerFullModel'

  securitySchemes:
    # user_token:
    #   type: http
    #   scheme: bearer
    #   bearerFormat: JWT
    #   x-bearerInfoFunc: dms2122backend.presentation.rest.security.verify_token
    api_key:
      type: apiKey
      name: X-ApiKey-Backend
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          